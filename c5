CELL 7: 
from pathlib import Path
from datetime import datetime
import pandas as pd
from pyspark.sql import SparkSession

spark = SparkSession.builder.getOrCreate()

def process_mp3(mp3_path: str):
    file_name = Path(mp3_path).name
    text = transcribe_mp3(mp3_path, speech_config)  # uses Cell 6 function and Cell 5 speech_config
    row = {
        "filename": file_name,
        "transcript": text,
        "processed_timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
        "transcript_length": len(text)
    }
    df = spark.createDataFrame(pd.DataFrame([row]))
    return df, text  # ab transcript bhi return kar rahe hain


cell 8:
# Update your MP3 path and target table name
mp3_file_path = "/Workspace/Users/anuj.b.s@mughalvaren.com/sample-ppt/audio/presentation_script/1_user_say/mygov_1.mp3"
table_name = "mp3_audio_parser"

# If you use Unity Catalog, optionally set catalog/schema:
# spark.sql("USE CATALOG your_catalog")
# spark.sql("USE SCHEMA your_schema")

# Run pipeline - ab df aur transcript dono return hote hain
df, extracted_transcript = process_mp3(mp3_file_path)

# Show results
display(df)

# Save to Delta table
df.write.mode("append").saveAsTable(table_name)
print(f"Saved to table: {table_name}")

# Print extracted transcript separately
print("="*50)
print("EXTRACTED TRANSCRIPT:")
print("="*50)
print(extracted_transcript)
print("="*50)
print(f"Transcript length: {len(extracted_transcript)} characters")

